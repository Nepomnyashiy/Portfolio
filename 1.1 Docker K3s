Вот исправленный и улучшенный план по развертыванию Docker, Docker Compose и K3s, как в самом начале:

Развертывание окружения: Docker, Docker Compose и K3s

Шаг 1: Установка Docker и Docker Compose

1. Обновление системы и установка зависимостей Перед установкой Docker необходимо обновить систему и установить необходимые утилиты:

sudo apt update && sudo apt upgrade -y
sudo apt install -y ca-certificates curl gnupg lsb-release

Что происходит:

Обновляем систему и устанавливаем пакеты для работы с HTTPS и подписью пакетов.



2. Добавление официального репозитория Docker Ubuntu может содержать устаревшие версии Docker, поэтому добавляем официальный репозиторий:

sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.gpg > /dev/null
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null


3. Установка Docker и Docker Compose Устанавливаем Docker и Docker Compose:

sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

Проверяем версии:

docker --version
docker compose version


4. Добавление пользователя в группу Docker Для использования Docker без sudo:

sudo usermod -aG docker $USER
newgrp docker




---

Шаг 2: Установка и настройка K3s

1. Установка K3s Устанавливаем K3s, облегчённую версию Kubernetes:

curl -sfL https://get.k3s.io | sh -

Как это работает:

Загружается и выполняется установочный скрипт K3s, который автоматически устанавливает сервис K3s.



2. Проверка работы K3s Проверяем состояние кластера:

sudo k3s kubectl get nodes


3. Управление K3s Используем systemctl для управления K3s:

systemctl status k3s   # Проверка статуса
sudo systemctl stop k3s   # Остановить
sudo systemctl start k3s  # Запустить
sudo systemctl restart k3s # Перезапустить


4. Настройка kubectl для работы без sudo Создаём конфигурацию для kubectl:

mkdir -p $HOME/.kube
sudo cp /etc/rancher/k3s/k3s.yaml $HOME/.kube/config
sudo chown $USER:$USER $HOME/.kube/config
export KUBECONFIG=$HOME/.kube/config

Для автоматической загрузки конфигурации после перезапуска:

echo 'export KUBECONFIG=$HOME/.kube/config' >> ~/.bashrc
source ~/.bashrc




---

Что дальше?

Docker и Docker Compose установлены

K3s развернут и настроен

kubectl настроен для работы без sudo


Следующий шаг:

Разработка Django-приложения с использованием Docker для контейнеризации.


# Развертывание окружения: Docker, Docker Compose и K3s

## Шаг 1: Установка Docker и Docker Compose

### 1. Обновление системы и установка зависимостей
Перед установкой Docker необходимо обновить систему и установить необходимые утилиты:

```sh
sudo apt update && sudo apt upgrade -y
sudo apt install -y ca-certificates curl gnupg lsb-release
```

**Что происходит:**
- Обновляем систему.
- Устанавливаем пакеты для работы с HTTPS и подписью пакетов.

### 2. Добавление официального репозитория Docker
Ubuntu может содержать устаревшие версии Docker, поэтому добавляем официальный репозиторий:

```sh
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.gpg > /dev/null
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
```

### 3. Установка Docker и Docker Compose
Устанавливаем Docker и Docker Compose:

```sh
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
```

Проверяем версии:

```sh
docker --version
docker compose version
```

### 4. Добавление пользователя в группу Docker
Для использования Docker без sudo:

```sh
sudo usermod -aG docker $USER
newgrp docker
```

## Шаг 2: Установка и настройка K3s

### 1. Установка K3s
Устанавливаем K3s, облегченную версию Kubernetes:

```sh
curl -sfL https://get.k3s.io | sh -
```

**Как это работает:**
- Загружается и выполняется установочный скрипт K3s, который автоматически устанавливает сервис K3s.

### 2. Проверка работы K3s
Проверяем состояние кластера:

```sh
sudo k3s kubectl get nodes
```

### 3. Управление K3s
Используем `systemctl` для управления K3s:
